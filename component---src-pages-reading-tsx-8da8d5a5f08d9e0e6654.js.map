{"version":3,"file":"component---src-pages-reading-tsx-8da8d5a5f08d9e0e6654.js","mappings":"sNAKA,MAAMA,E,QAAoBC,QAAOC,IAAGC,WAAA,CAAAC,YAAA,6BAAAC,YAAA,eAAVJ,CAAU,2HA0EpC,UA5DqCK,IAA8C,IAA7C,KAAEC,GAAsCD,EAC1E,MAAOE,EAAOC,GAAYC,EAAAA,SAAeH,EAAKI,kBAAkBC,OAUhE,OARAF,EAAAA,UAAgB,KAEZD,GAAQI,EAAAA,EAAAA,GAAKL,KACd,IAGHA,EAAMM,KAAK,CAACC,EAAQC,IAAWC,KAAKC,MAAMF,EAAEG,KAAKC,YAAYC,SAAWJ,KAAKC,MAAMH,EAAEI,KAAKC,YAAYC,UAGlGX,EAAAA,cAAA,YACIA,EAAAA,cAACY,EAAAA,EAAO,MACRZ,EAAAA,cAAA,OAAKa,UAAU,UAAUC,MAAO,CAAEC,SAAU,WACvCjB,EAAMkB,IAAIC,IAAA,IAAC,KAAER,GAAMQ,EAAA,OAChBjB,EAAAA,cAACV,EAAiB,KACdU,EAAAA,cAAA,QAAMc,MAAO,CAAEI,MAAO,OAAQC,WAAY,YAAaC,SAAU,SAC5DX,EAAKC,YAAYC,SACf,OAEPX,EAAAA,cAACqB,EAAAA,GAAI,CAACC,GAAIb,EAAKc,OAAOC,MAAOf,EAAKC,YAAYe,OAAa,KAE3DzB,EAAAA,cAAA,QAAMc,MAAO,CAAEI,MAAO,SAAWT,EAAKC,YAAYgB,gBAuCnE,MAAMC,EAAeA,IAAM3B,EAAAA,cAAA,aAAO,U","sources":["webpack://lee-janice.github.io/./src/pages/reading.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { graphql, Link, type HeadFC, type PageProps } from \"gatsby\";\nimport SideBar from \"../components/sidebar\";\nimport styled from \"styled-components\";\n\nconst StyledPostListing = styled.div`\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    a {\n        color: white;\n        font-weight: 800;\n\n        &:hover {\n            color: darkseagreen;\n        }\n    }\n`;\n\nconst Reading: React.FC<PageProps> = ({ data }: PageProps<Queries.ReadingPage>) => {\n    const [posts, setPosts] = React.useState(data.allMarkdownRemark.edges);\n\n    React.useEffect(() => {\n        // add custom pages to list\n        setPosts([...posts]);\n    }, []);\n\n    // sort by creation date\n    posts.sort((a: any, b: any) => Date.parse(b.node.frontmatter.created) - Date.parse(a.node.frontmatter.created));\n\n    return (\n        <main>\n            <SideBar />\n            <div className=\"content\" style={{ maxWidth: \"1000px\" }}>\n                {posts.map(({ node }) => (\n                    <StyledPostListing>\n                        <span style={{ color: \"gray\", fontFamily: \"monospace\", fontSize: \"14px\" }}>\n                            {node.frontmatter.created}\n                        </span>\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n                        &nbsp;&nbsp;\n                        <span style={{ color: \"gray\" }}>{node.frontmatter.subtitle}</span>\n                    </StyledPostListing>\n                ))}\n            </div>\n        </main>\n    );\n};\n\nexport const query = graphql`\n    query ReadingPage {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(\n            filter: { frontmatter: { published: { ne: false } }, fileAbsolutePath: { regex: \"/(reading)/\" } }\n            sort: { frontmatter: { created: DESC } }\n        ) {\n            edges {\n                node {\n                    excerpt\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        title\n                        subtitle\n                        created(formatString: \"DD MMM YYYY\")\n                        updated(formatString: \"DD MMM YYYY\")\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport default Reading;\n\nexport const Head: HeadFC = () => <title>reading</title>;\n"],"names":["StyledPostListing","styled","div","withConfig","displayName","componentId","_ref","data","posts","setPosts","React","allMarkdownRemark","edges","_toConsumableArray","sort","a","b","Date","parse","node","frontmatter","created","SideBar","className","style","maxWidth","map","_ref2","color","fontFamily","fontSize","Link","to","fields","slug","title","subtitle","Head"],"sourceRoot":""}