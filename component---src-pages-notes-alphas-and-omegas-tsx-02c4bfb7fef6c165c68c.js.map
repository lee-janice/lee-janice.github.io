{"version":3,"file":"component---src-pages-notes-alphas-and-omegas-tsx-02c4bfb7fef6c165c68c.js","mappings":"4MAKA,MAAMA,EAAcC,EAAAA,QAAOC,GAAEC,WAAA,CAAAC,YAAA,iCAAAC,YAAA,gBAATJ,CAAS,uCAKvBK,EAAiBL,EAAAA,QAAOM,GAAEJ,WAAA,CAAAC,YAAA,oCAAAC,YAAA,gBAATJ,CAAS,wCAmEhC,UA9DoCO,IAAyC,IAAxC,KAAEC,GAAiCD,EAGpE,IAAIE,EAAc,GAWlB,OAVAD,EAAKE,eAAeC,MAAMC,QAASC,IAAc,IAAAC,EAAAC,EAC7CN,EAAOO,KAAK,CACRC,aAAcJ,EAAKK,KAAKD,aACxBE,YAAaN,EAAKK,KAAKC,YACvBC,MAAOP,EAAKK,KAAKE,MACjBC,UAAgF,QAAvEP,EAAED,EAAKK,KAAKT,OAAOa,OAAQC,IAAM,IAAAC,EAAA,OAAW,QAAXA,EAAKD,EAAEE,YAAI,IAAAD,OAAA,EAANA,EAAQE,SAAS,eAAc,UAAE,IAAAZ,OAAA,EAArEA,EAAuEa,MAClFC,OAA0E,QAApEb,EAAEF,EAAKK,KAAKT,OAAOa,OAAQC,IAAM,IAAAM,EAAA,OAAW,QAAXA,EAAKN,EAAEE,YAAI,IAAAI,OAAA,EAANA,EAAQH,SAAS,YAAW,UAAE,IAAAX,OAAA,EAAlEA,EAAoEY,UAKhFG,EAAAA,cAACC,EAAAA,EAAM,KACHD,EAAAA,cAAA,WAASE,UAAU,WACfF,EAAAA,cAAC/B,EAAW,KAAC,6BACb+B,EAAAA,cAACzB,EAAc,KAAC,wEAChByB,EAAAA,cAAA,eACIA,EAAAA,cAAA,WACCrB,aAAM,EAANA,EACKwB,KAAK,CAACC,EAAQC,IAAWD,EAAEf,YAAYiB,cAAcD,EAAEhB,cACxDkB,IAAKV,GACFA,EAAMN,WAAaM,EAAMC,OACrBE,EAAAA,cAAA,WACIA,EAAAA,cAAA,UACKH,EAAMP,MAAM,OAAKO,EAAMV,aAAa,IAAEU,EAAMR,aAEjDW,EAAAA,cAAA,UAAI,iBACJA,EAAAA,cAAA,SAAIH,EAAMN,WACVS,EAAAA,cAAA,UAAI,WACJA,EAAAA,cAAA,SAAIH,EAAMC,QACVE,EAAAA,cAAA,WACAA,EAAAA,cAAA,YAEJ,UA4BzB,MAAMQ,EAAeA,IAAMR,EAAAA,cAAA,aAAO,oB,+CC9DzC,IATgCvB,IAAA,IAAC,SAAEgC,GAAUhC,EAAA,OACzCuB,EAAAA,cAAAA,EAAAA,SAAA,KACIA,EAAAA,cAAA,YACIA,EAAAA,cAACU,EAAAA,EAAO,MACPD,I","sources":["webpack://lee-janice.github.io/./src/pages/notes/alphas-and-omegas.tsx","webpack://lee-janice.github.io/./src/components/layout.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { graphql, Link, type HeadFC, type PageProps } from \"gatsby\";\nimport styled from \"styled-components\";\nimport Layout from \"../../components/layout\";\n\nconst StyledTitle = styled.h1`\n    margin-top: 0px;\n    margin-bottom: 2px;\n`;\n\nconst StyledSubtitle = styled.h2`\n    margin-top: 0px;\n    margin-bottom: 20px;\n`;\n\nconst AOPage: React.FC<PageProps> = ({ data }: PageProps<Queries.AOPage>) => {\n    // get all beginnings and endings\n    // TODO: refactor - pretty sure i can do this better with flatMap\n    var quotes: any = [];\n    data.allReadingYaml.edges.forEach((note: any) => {\n        quotes.push({\n            author_first: note.node.author_first,\n            author_last: note.node.author_last,\n            title: note.node.title,\n            beginning: note.node.quotes.filter((q: any) => q.tags?.includes(\"beginning\"))[0]?.quote,\n            ending: note.node.quotes.filter((q: any) => q.tags?.includes(\"ending\"))[0]?.quote,\n        });\n    });\n\n    return (\n        <Layout>\n            <article className=\"content\">\n                <StyledTitle>Alphas (A) and Omegas (Ω)</StyledTitle>\n                <StyledSubtitle>All that can be said in a beginning and an end ⚬ 4 of September 2025</StyledSubtitle>\n                <section>\n                    <hr />\n                    {quotes\n                        ?.sort((a: any, b: any) => a.author_last.localeCompare(b.author_last))\n                        .map((quote: any) =>\n                            quote.beginning && quote.ending ? (\n                                <div>\n                                    <h1>\n                                        {quote.title} by {quote.author_first} {quote.author_last}\n                                    </h1>\n                                    <h2>The Beginning</h2>\n                                    <p>{quote.beginning}</p>\n                                    <h2>The End</h2>\n                                    <p>{quote.ending}</p>\n                                    <br />\n                                    <hr />\n                                </div>\n                            ) : null\n                        )}\n                </section>\n            </article>\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    query AOPage {\n        allReadingYaml {\n            edges {\n                node {\n                    quotes {\n                        quote\n                        tags\n                    }\n                    author_first\n                    author_last\n                    title\n                }\n            }\n        }\n    }\n`;\n\nexport default AOPage;\n\nexport const Head: HeadFC = () => <title>Alphas and Omegas</title>;\n","import React from \"react\";\nimport SideBar from \"./sidebar\";\n\ninterface Props {\n    readonly title?: string;\n    readonly children: React.ReactNode;\n}\n\nconst Layout: React.FC<Props> = ({ children }) => (\n    <>\n        <main>\n            <SideBar />\n            {children}\n        </main>\n    </>\n);\n\nexport default Layout;\n"],"names":["StyledTitle","styled","h1","withConfig","displayName","componentId","StyledSubtitle","h2","_ref","data","quotes","allReadingYaml","edges","forEach","note","_note$node$quotes$fil","_note$node$quotes$fil2","push","author_first","node","author_last","title","beginning","filter","q","_q$tags","tags","includes","quote","ending","_q$tags2","React","Layout","className","sort","a","b","localeCompare","map","Head","children","SideBar"],"sourceRoot":""}