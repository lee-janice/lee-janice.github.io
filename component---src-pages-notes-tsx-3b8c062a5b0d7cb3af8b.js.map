{"version":3,"file":"component---src-pages-notes-tsx-3b8c062a5b0d7cb3af8b.js","mappings":"uNAKA,MAAMA,E,QAAoBC,QAAOC,IAAGC,WAAA,CAAAC,YAAA,2BAAAC,YAAA,gBAAVJ,CAAU,2HAsGpC,UAxFmCK,IAA4C,IAA3C,KAAEC,GAAoCD,EACtE,MAAOE,EAAOC,GAAYC,EAAAA,SAAeH,EAAKI,kBAAkBC,OAsChE,OApCAF,EAAAA,UAAgB,KA8BZD,EAAS,GAADI,QAAAC,EAAAA,EAAAA,GAAKN,GA5BE,CACX,CACIO,KAAM,CACFC,OAAQ,CACJC,KAAM,6BAEVC,YAAa,CACTC,MAAO,4BACPC,SAAU,iDACVC,QAAS,cACTC,QAAS,iBAIrB,CACIP,KAAM,CACFC,OAAQ,CACJC,KAAM,8BAEVC,YAAa,CACTC,MAAO,qBACPC,SAAU,yCACVC,QAAS,cACTC,QAAS,qBAM1B,IAGHd,EAAMe,KAAK,CAACC,EAAQC,IAAWC,KAAKC,MAAMF,EAAEV,KAAKG,YAAYG,SAAWK,KAAKC,MAAMH,EAAET,KAAKG,YAAYG,UAGlGX,EAAAA,cAAA,YACIA,EAAAA,cAACkB,EAAAA,EAAO,MACRlB,EAAAA,cAAA,OAAKmB,UAAU,UAAUC,MAAO,CAAEC,SAAU,WACvCvB,EAAMwB,IAAIC,IAAA,IAAC,KAAElB,GAAMkB,EAAA,OAChBvB,EAAAA,cAACV,EAAiB,KACdU,EAAAA,cAAA,QAAMoB,MAAO,CAAEI,MAAO,OAAQC,WAAY,YAAaC,SAAU,SAC5DrB,EAAKG,YAAYG,SACf,OAEPX,EAAAA,cAAC2B,EAAAA,GAAI,CAACC,GAAIvB,EAAKC,OAAOC,MAAOF,EAAKG,YAAYC,OAAa,KAE3DT,EAAAA,cAAA,QAAMoB,MAAO,CAAEI,MAAO,SAAWnB,EAAKG,YAAYE,gBAuCnE,MAAMmB,EAAeA,IAAM7B,EAAAA,cAAA,aAAO,Q","sources":["webpack://lee-janice.github.io/./src/pages/notes.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { graphql, Link, type HeadFC, type PageProps } from \"gatsby\";\nimport SideBar from \"../components/sidebar\";\nimport styled from \"styled-components\";\n\nconst StyledPostListing = styled.div`\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    a {\n        color: white;\n        font-weight: 800;\n\n        &:hover {\n            color: darkseagreen;\n        }\n    }\n`;\n\nconst Notes: React.FC<PageProps> = ({ data }: PageProps<Queries.NotesPage>) => {\n    const [posts, setPosts] = React.useState(data.allMarkdownRemark.edges);\n\n    React.useEffect(() => {\n        // add custom pages to notes list\n        const custom = [\n            {\n                node: {\n                    fields: {\n                        slug: \"/notes/alphas-and-omegas/\",\n                    },\n                    frontmatter: {\n                        title: \"Alphas (A) and Omegas (Î©)\",\n                        subtitle: \"All that can be said in a beginning and an end\",\n                        created: \"04 Sep 2025\",\n                        updated: \"04 Sep 2025\",\n                    },\n                },\n            },\n            {\n                node: {\n                    fields: {\n                        slug: \"/notes/letters-to-live-by/\",\n                    },\n                    frontmatter: {\n                        title: \"Letters to live by\",\n                        subtitle: \"A small selection of words well-strung\",\n                        created: \"06 Sep 2025\",\n                        updated: \"06 Sep 2025\",\n                    },\n                },\n            },\n        ];\n        setPosts([...posts, ...custom]);\n    }, []);\n\n    // sort by creation date\n    posts.sort((a: any, b: any) => Date.parse(b.node.frontmatter.created) - Date.parse(a.node.frontmatter.created));\n\n    return (\n        <main>\n            <SideBar />\n            <div className=\"content\" style={{ maxWidth: \"1000px\" }}>\n                {posts.map(({ node }) => (\n                    <StyledPostListing>\n                        <span style={{ color: \"gray\", fontFamily: \"monospace\", fontSize: \"14px\" }}>\n                            {node.frontmatter.created}\n                        </span>\n                        &nbsp;&nbsp;&nbsp;&nbsp;\n                        <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n                        &nbsp;&nbsp;\n                        <span style={{ color: \"gray\" }}>{node.frontmatter.subtitle}</span>\n                    </StyledPostListing>\n                ))}\n            </div>\n        </main>\n    );\n};\n\nexport const query = graphql`\n    query NotesPage {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(\n            filter: { frontmatter: { published: { ne: false } }, fileAbsolutePath: { regex: \"/(notes)/\" } }\n            sort: { frontmatter: { created: DESC } }\n        ) {\n            edges {\n                node {\n                    excerpt\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        title\n                        subtitle\n                        created(formatString: \"DD MMM YYYY\")\n                        updated(formatString: \"DD MMM YYYY\")\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport default Notes;\n\nexport const Head: HeadFC = () => <title>notes</title>;\n"],"names":["StyledPostListing","styled","div","withConfig","displayName","componentId","_ref","data","posts","setPosts","React","allMarkdownRemark","edges","concat","_toConsumableArray","node","fields","slug","frontmatter","title","subtitle","created","updated","sort","a","b","Date","parse","SideBar","className","style","maxWidth","map","_ref2","color","fontFamily","fontSize","Link","to","Head"],"sourceRoot":""}